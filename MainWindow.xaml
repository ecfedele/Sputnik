<!-- ╔════════════════════════════════════════════════════════════════════════════════════════════════════════╗ -->
<!-- ║ File:        MainWindow.xaml                                                                           ║ -->
<!-- ║ Project:     Sputnik                                                                                   ║ -->
<!-- ║ Author:      E. C. Fedele                                                                              ║ -->
<!-- ║ Date:        January 29, 2023                                                                          ║ -->
<!-- ║ Description: UI markup file for the main window of the Sputnik satellite tracking application.         ║ -->
<!-- ╠════════════════════════════════════════════════════════════════════════════════════════════════════════╣ -->
<!-- ║ Copyright (C) 2023 E. C. Fedele                                                                        ║ -->
<!-- ║                                                                                                        ║ -->
<!-- ║ Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in    ║ -->
<!-- ║ compliance with the License. You may obtain a copy of the License at                                   ║ -->
<!-- ║                                                                                                        ║ -->
<!-- ║       http://www.apache.org/licenses/LICENSE-2.0                                                       ║ -->
<!-- ║                                                                                                        ║ -->
<!-- ║ Unless required by applicable law or agreed to in writing, software distributed under the License is   ║ -->
<!-- ║ distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       ║ -->
<!-- ║ implied. See the License for the specific language governing permissions and limitations under the     ║ -->
<!-- ║ License.                                                                                               ║ -->
<!-- ╚════════════════════════════════════════════════════════════════════════════════════════════════════════╝ -->

<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sputnik"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf" x:Class="Sputnik.MainWindow"
        mc:Ignorable="d"
        Title="Sputnik Satellite Tracker" Height="950" Width="1885">
    <Grid>
        <!-- Configure row definitions so WPF doesn't decide to completely send the layout to the shadow realm  -->
        <!-- if the window is resized. Configure the Grid as a 4 x 5 layout, with Auto heights/widths used for  -->
        <!-- elements with a well-defined primary dimension.                                                    -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="3*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Set up the Ribbon, the primary user interface for configuration and settings, among other things.  -->
        <!-- Use the ColumnSpan property to ensure it always comprises the full width of the window.            -->
        <syncfusion:Ribbon Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" HorizontalAlignment="Center" 
                           Height="145" VerticalAlignment="Top">
            <syncfusion:Ribbon.ApplicationMenu>
                <syncfusion:ApplicationMenu IsPopupOpen="False"/>
            </syncfusion:Ribbon.ApplicationMenu>
            <syncfusion:Ribbon.QuickAccessToolBar>
                <syncfusion:QuickAccessToolBar/>
            </syncfusion:Ribbon.QuickAccessToolBar>
            <syncfusion:RibbonTab Caption="Home">
                <syncfusion:RibbonBar Header="Ribbon Bar 1"/>
            </syncfusion:RibbonTab>
            <syncfusion:RibbonTab Caption="Send/Receive"/>
        </syncfusion:Ribbon>

        <!-- Configure the SfTreeView to display a list (with checkboxes) of satellites the user might wish to  -->
        <!-- select for viewing on the Canvas.                                                                  -->
        <syncfusion:SfTreeView Grid.Row="2" Grid.Column="0">
            <syncfusion:SfTreeView.Nodes>
                <syncfusion:TreeViewNode Content="Grains" IsExpanded="True">
                    <syncfusion:TreeViewNode.ChildNodes>
                        <syncfusion:TreeViewNode Content="Cereals" IsExpanded="True">
                            <syncfusion:TreeViewNode.ChildNodes>
                                <syncfusion:TreeViewNode Content="Rice"/>
                                <syncfusion:TreeViewNode Content="Barley"/>
                            </syncfusion:TreeViewNode.ChildNodes>
                        </syncfusion:TreeViewNode>
                        <syncfusion:TreeViewNode Content="OilSeeds">
                            <syncfusion:TreeViewNode.ChildNodes>
                                <syncfusion:TreeViewNode Content="Safflower"/>
                            </syncfusion:TreeViewNode.ChildNodes>
                        </syncfusion:TreeViewNode>
                    </syncfusion:TreeViewNode.ChildNodes>
                </syncfusion:TreeViewNode>
                <syncfusion:TreeViewNode Content="Fruits" IsExpanded="true">
                    <syncfusion:TreeViewNode.ChildNodes>
                        <syncfusion:TreeViewNode Content="Orange"/>
                        <syncfusion:TreeViewNode Content="Apples" IsExpanded="true"/>
                    </syncfusion:TreeViewNode.ChildNodes>
                </syncfusion:TreeViewNode>
                <syncfusion:TreeViewNode Content="Vegetables" IsExpanded="true">
                    <syncfusion:TreeViewNode.ChildNodes>
                        <syncfusion:TreeViewNode Content="Root vegetables" IsExpanded="true">
                            <syncfusion:TreeViewNode.ChildNodes>
                                <syncfusion:TreeViewNode Content="Potato"/>
                                <syncfusion:TreeViewNode Content="Carrot"/>
                            </syncfusion:TreeViewNode.ChildNodes>
                        </syncfusion:TreeViewNode>
                        <syncfusion:TreeViewNode Content="Podded">
                            <syncfusion:TreeViewNode.ChildNodes>
                                <syncfusion:TreeViewNode Content="peanut"/>
                                <syncfusion:TreeViewNode Content="lentil"/>
                            </syncfusion:TreeViewNode.ChildNodes>
                        </syncfusion:TreeViewNode>
                    </syncfusion:TreeViewNode.ChildNodes>
                </syncfusion:TreeViewNode>
            </syncfusion:SfTreeView.Nodes>
        </syncfusion:SfTreeView>

        <!-- Add "line header" elements                                                                         -->
        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="5" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="5" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="USER OBJECT LIBRARY" />
            <Button Grid.Row="1" Grid.Column="2" Content="Manage Library" />
        </Grid>
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="5" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="5" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="1" Grid.Column="1" Name="canvasSummaryTextBlock" Text="LOCATION/UPDATE FIELD" />
        </Grid>
        <Grid Grid.Row="1" Grid.Column="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="5" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="5" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="SELECTED OBJECT DATA" />
        </Grid>

        <!-- Add in the main Canvas element, the UI centerpiece which displays the satellite tracks over an     -->
        <!-- equirectangular map projection.                                                                    -->
        <Canvas Grid.Row="2" Grid.Column="2" Name="mapCanvas">
            <Canvas.Background>
                <ImageBrush ImageSource="Assets/Equirectangular.png" Stretch="Fill" TileMode="None" />
            </Canvas.Background>
        </Canvas>

        <!-- TODO: Add data pane in Column 4.                                                                   -->

        <!-- Add in GridSplitters to visually separate the center elements a bit.                               -->
        <GridSplitter Grid.Row="1" Grid.RowSpan="2" Grid.Column="1" ResizeDirection="Columns" Width="4" 
                      IsEnabled="False" />
        <GridSplitter Grid.Row="1" Grid.RowSpan="2" Grid.Column="3" ResizeDirection="Columns" Width="4" 
                      IsEnabled="False" />

        <!-- Set up the StatusBar in the lower aspect of the screen. Configure it to have three equally-sized,  -->
        <!-- separated elements representing a status message, the current time, and a progress bar for         -->
        <!-- computationally-intensive operations.                                                              -->
        <StatusBar Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock Name="statusMessageTextBlock" Text="Ready" />
            </StatusBarItem>
            <Separator Grid.Column="1" />
            <StatusBarItem Grid.Column="2">
                <TextBlock Name="liveTimeTextBlock" Text="%TIME%" />
            </StatusBarItem>
            <Separator Grid.Column="3" />
            <StatusBarItem Grid.Column="4">
                <ProgressBar Name="operationProgressBar" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
